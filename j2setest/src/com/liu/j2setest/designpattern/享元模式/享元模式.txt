享元模式:FlyWeight

一、适用场景
    如果一个系统中有很多完全相同或相似的对象，我们就可以使用享元模式，让他们共享一份内存即可，不必每个都去实例化

二、模式核心
    1.享元模式以共享的方式高效支持大量细粒度对象的重用
    2.享元对象能做到共享的关键是区分了内部状态和外部状态
        内部状态：可以共享，不会随环境的改变而改变。比如围棋棋子的颜色、形状、大小。
        外部状态：不可以共享，会随环境的改变而改变。比如每个棋子在棋盘上面的位置。

String类就是使用了享元模式

享元模式和单例模式的区别：
单例模式 ：确保一个类只能产生一个实例，节省创建对象花费时间
享元模式：系统中存在多个相同的对象，那么只需要共享一个对象的拷贝。享元模式可以看成是单例模式的扩展